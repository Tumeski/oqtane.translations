<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Name.Text" xml:space="preserve">
    <value>名前: </value>
  </data>
  <data name="Description.Text" xml:space="preserve">
    <value>説明: </value>
  </data>
  <data name="Error.Module.Load" xml:space="preserve">
    <value>モジュール読み込みエラー</value>
  </data>
  <data name="Error.Module.Save" xml:space="preserve">
    <value>エラー保存モジュール</value>
  </data>
  <data name="Name.HelpText" xml:space="preserve">
    <value>モジュール名</value>
  </data>
  <data name="Description.HelpText" xml:space="preserve">
    <value>モジュールの説明</value>
  </data>
  <data name="Categories.HelpText" xml:space="preserve">
    <value>モジュールカテゴリのカンマ区切りリスト</value>
  </data>
  <data name="InternalName.HelpText" xml:space="preserve">
    <value>モジュールの内部名</value>
  </data>
  <data name="Version.HelpText" xml:space="preserve">
    <value>モジュールのバージョン</value>
  </data>
  <data name="Owner.HelpText" xml:space="preserve">
    <value>モジュールの所有者または作成者</value>
  </data>
  <data name="Url.HelpText" xml:space="preserve">
    <value>モジュールのURL</value>
  </data>
  <data name="Contact.HelpText" xml:space="preserve">
    <value>モジュールの連絡先</value>
  </data>
  <data name="License.HelpText" xml:space="preserve">
    <value>モジュールのライセンス条項</value>
  </data>
  <data name="Runtimes.HelpText" xml:space="preserve">
    <value>このモジュールがサポートするBlazorランタイム</value>
  </data>
  <data name="Categories.Text" xml:space="preserve">
    <value>カテゴリ: </value>
  </data>
  <data name="InternalName.Text" xml:space="preserve">
    <value>内部名: </value>
  </data>
  <data name="Version.Text" xml:space="preserve">
    <value>バージョン: </value>
  </data>
  <data name="Owner.Text" xml:space="preserve">
    <value>オーナー: </value>
  </data>
  <data name="Url.Text" xml:space="preserve">
    <value>Url: </value>
  </data>
  <data name="Contact.Text" xml:space="preserve">
    <value>連絡先: </value>
  </data>
  <data name="License.Text" xml:space="preserve">
    <value>ライセンス: </value>
  </data>
  <data name="Runtimes.Text" xml:space="preserve">
    <value>ランタイム: </value>
  </data>
  <data name="Definition.Heading" xml:space="preserve">
    <value>定義</value>
  </data>
  <data name="Information.Heading" xml:space="preserve">
    <value>情報</value>
  </data>
  <data name="Permissions.Heading" xml:space="preserve">
    <value>パーミッション</value>
  </data>
  <data name="Information.Text" xml:space="preserve">
    <value>情報</value>
  </data>
  <data name="PackageName.HelpText" xml:space="preserve">
    <value>このモジュールがインストールされたパッケージの一意の名前。この値は、モジュールの IModule インターフェイス仕様内で指定する必要があります。</value>
  </data>
  <data name="PackageName.Text" xml:space="preserve">
    <value>パッケージ名:</value>
  </data>
  <data name="Error.Translation.Download" xml:space="preserve">
    <value>翻訳のダウンロード中にエラーが発生しました</value>
  </data>
  <data name="Search.PackageNameMissing" xml:space="preserve">
    <value>モジュールのパッケージ名が指定されていません</value>
  </data>
  <data name="Search.NoResults" xml:space="preserve">
    <value>このモジュールの翻訳が存在しないか、パッケージ サービスが無効になっています</value>
  </data>
  <data name="Success.Translation.Download" xml:space="preserve">
    <value>翻訳パッケージが正常に保存されました。インストールを完了するには、アプリケーションを &lt;a href={0}&gt;再起動&lt;/a&gt; する必要があります。</value>
  </data>
  <data name="Translations.Heading" xml:space="preserve">
    <value>翻訳</value>
  </data>
  <data name="Message.DuplicateName" xml:space="preserve">
    <value>指定された名前のモジュールはすでに存在します</value>
  </data>
  <data name="IsEnabled.HelpText" xml:space="preserve">
    <value>このサイトではモジュールが有効になっていますか?</value>
  </data>
  <data name="IsEnabled.Text" xml:space="preserve">
    <value>有効化:</value>
  </data>
  <data name="View License" xml:space="preserve">
    <value>ライセンスを表示</value>
  </data>
  <data name="Browse" xml:space="preserve">
    <value>ブラウズ</value>
  </data>
  <data name="Pages.Heading" xml:space="preserve">
    <value>ページ</value>
  </data>
  <!-- Japanese -->
  <data name="Information" xml:space="preserve">
    <value>情報</value>
  </data>
  <!-- Japanese End -->

</root>